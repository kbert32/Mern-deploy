{"version":3,"file":"static/js/492.d7abb031.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js"],"sourcesContent":["import { useContext } from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceForm.css';\n\n\nexport default function NewPlace() {\n\n    const authCtx = useContext(AuthContext);\n    \n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n    const [formState, inputHandler] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        },\n        address: {\n            value: '',\n            isValid: false\n        },\n        image: {\n            value: null,\n            isValid: false\n        }\n    }, false);\n\n    const navigate = useNavigate();\n\n    async function placeSubmitHandler(event) {\n        \n        event.preventDefault();\n\n        try {\n            const formData = new FormData();                                        //'FormData' is an API built into the browser that allows us to send\n            formData.append('title', formState.inputs.title.value);                 //binary data\n            formData.append('description', formState.inputs.description.value);\n            formData.append('address', formState.inputs.address.value);\n            formData.append('image', formState.inputs.image.value);\n\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + '/api/places', 'POST', formData, {   //with 'FormData', the fetch API automatically sets up our headers\n                Authorization: 'Bearer ' + authCtx.token\n            });\n            \n            navigate('/');\n        } catch (err) {};\n    };\n    \n    return (\n        <>\n            <ErrorModal error={error} onClear={clearError} />\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n                {isLoading && <LoadingSpinner asOverlay />}\n                <Input\n                    id='title' \n                    element='input' \n                    type='text' \n                    label='Title' \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText='Please enter a valid title.' \n                    onInput={inputHandler}   \n                    />\n                <Input \n                    id='description'\n                    element='textarea' \n                    type='text' \n                    label='Description' \n                    validators={[VALIDATOR_MINLENGTH(5)]} \n                    errorText='Please enter a valid description (at least 5 characters).' \n                    onInput={inputHandler}   \n                    />\n                <Input \n                    id='address'\n                    element='input' \n                    type='text' \n                    label='Address' \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText='Please enter a valid address.' \n                    onInput={inputHandler}   \n                    />\n                <ImageUpload id='image' onInput={inputHandler} errorText='Please provide an image.' />\n                <Button type='submit' disabled={!formState.isValid}>ADD PLACE</Button>\n            </form>\n        </>\n    );\n};","import { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nexport default function ImageUpload(props) {\n\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();     //useRef is used to gain access to the input's .click() method since the input field is = display: \n                                        //Max thinks the default input field is ugly\n    useEffect(() => {\n        if (!file) {\n            return;\n        }\n        const fileReader = new FileReader();        //FileReader is an API that is built into the browser\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file])\n\n    function pickedHandler(event) {\n\n        let pickedFile;\n        let fileIsValid = isValid;\n        if (event.target.files || event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    };\n\n    function pickImageHandler() {\n        filePickerRef.current.click();\n    };\n\n    return (\n        <div className='form-control'>\n            <input id={props.id} ref={filePickerRef} style={{display: 'none'}} type='file' accept='.jpg, .png, .jpeg' onChange={pickedHandler} />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className='image-upload__preview'>\n                    {previewUrl && <img src={previewUrl} alt='Preview' />}\n                    {!previewUrl && <p>Please pick an image.</p>}\n                </div>\n                <Button type='button' onClick={pickImageHandler}>Pick Image</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\n","import { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';           \n\nfunction inputReducer(state, action) {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                touched: true\n            };\n        default: \n            return state;\n    }\n};\n\n\nexport default function Input(props) {\n\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || '', \n        isValid: props.initialValid || false, \n        touched: false\n    });\n\n    const {id, onInput} = props;        //these props are pulled from the objects to avoid infinite loops within \n    const {value, isValid} = inputState;    //useEffect\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    function changeHandler(event) {\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators});\n    };\n\n    function touchHandler() {\n        dispatch({type: 'TOUCH'});\n    };\n\n    const element = props.element === 'input' ? (\n        <input \n            id={props.id} \n            type={props.type} \n            placeholder={props.placeholder} \n            onChange={changeHandler} \n            onBlur={touchHandler}\n            value={inputState.value} \n        />\n    ) : (\n        <textarea \n            id={props.id} \n            rows={props.rows || 3} \n            onChange={changeHandler} \n            onBlur={touchHandler}\n            value={inputState.value} \n        /> \n    );\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.touched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.touched && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\n\n//We can also use third party libraries for form functionality such as React 'Formik'","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (!state.inputs[inputId]) {       //if property is undefined, don't evaluate form validity\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: {value: action.value, isValid: action.isValid} \n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\n\nexport function useForm(initialInputs, initialFormValidity) {\n\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id})\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["NewPlace","authCtx","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","navigate","useNavigate","_placeSubmitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","process","Authorization","token","t0","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","_x","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","current","click","inputReducer","state","action","_objectSpread","val","validate","touched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","e","f"],"sourceRoot":""}